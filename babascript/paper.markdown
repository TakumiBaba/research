#Title
実世界プログラミングのための分散人力処理環境
##Authors
TakumiBaba, ShoHashimoto, ToshiyukiMasui
##introduction
###コンピュータの偉大さ
計算機は、
###コンピュータが人の能力を拡張
計算機は、人の能力を拡張している。
高速演算によって、人ならば時間がかかるような計算を瞬時に行ってしまう。
また、拡張現実感などの実世界指向インタフェースが登場したことによって、現実世界の中でも
コンピュータの能力を活用できるようになった。
###人力の偉大さ
###人がコンピュータを拡張し始めた
計算機にはまだ難しい処理といったものも存在している。
例えば、画像の中の手書き文字を判別するといったことは、人がやったほうが早い。
こういった問題に対し、HumanComputationという考え方が提唱されている。
人を計算資源として捉え、計算機では解決が難しい問題の演算を人にやらせるといったものだ。
これによって、人がコンピュータを拡張するようになった。
###これからは、人とコンピュータが相互に拡張しあう
コンピュータが人を拡張するだけでなく、人がコンピュータを拡張するようになっている。
しかし、現状ではまだ人からコンピュータへの拡張は人の能力の一部分を使っているだけにすぎない。
人は計算だけでなく、実世界の情報を取得したり、実世界に干渉することができる。
こういった能力も含めて、人からコンピュータへの拡張をより高度に、密接にすることによって
人とコンピュータの相互補完をより高度なものにすることができないか。
「計算機が得意なことは計算機が、人が得意なことは人がやる」
これを推し進めていくことによって、より便利な世の中が出来上がるのではないか。
###人を実世界とのインタフェースとして利用できる仕組み
人とコンピュータの相互補完によって、人とコンピュータがお互いに能力を利用しあえる

##System
###実世界プログラミングのための分散人力処理環境
- プログラムと実世界のインタフェースとして、人を利用
- 人とセンサ・アクチュエータ・計算機がプログラム上で対等になる
####人のメリット
- 柔軟に解釈可能
- 強力なセンサ・アクチュエータとして機能
###特徴
- 強力な実世界インタフェースの実現
- センサ・アクチュエータとの協調
###実現手法
人とセンサ・アクチュエータ・計算機を同等に扱うために
- センサ・アクチュエータを利用するのと同じような手法を人に適応させる

```ruby
arduino = Arduino.new()
response = arduino.analogRead(0)
arduino.analogWrite(0, 100)
```

rubyからarduinoを利用する時、こんな感じ
ならば、同じようなソースコードで人を扱えるようにする

```ruby
human = Human.new()
response = human.研究室には今、何人いますか？
human.ご飯買ってこい()
```

これによって、プログラム上で人とセンサ・アクチュエータなどを同等に扱うことができる。
Arduinoなどを使うのと同じように、
- プログラム上でarduinoを扱うのと同じような書き方で記述可能
- arduinoの利用を明示し、どのセンサから情報を得るのかを確定させる
- メソッドを実行すると返り値を受け取ることができる


実現のためには、以下の要素が必要
1.プログラム上で人へのタスクを記述可能
2.タスクを適切な人へと配信
3.タスクを人に伝え、結果をプログラムに返す
1. を満たすためにBabaScriptを
3. を満たすためにBabaScriptClientを
開発する。
2. を満たすために、Linda-BaseというWebサービスを利用する
###仕組み
####BabaScript
####BabaScript Client
####Linda-Base
###未来

##application example
### Webサービスの実世界拡張
### 人力プログラムの共有・実行プラットフォーム

##discussion
###求める返り値と現実の返り値の乖離
-人によって解釈が異なるので、違う答えが返ってくるのでは
許容せざるを得ない？
-同期？非同期？長い間待つことは？
同期的にも非同期的にも可能
プログラムが動き続ける限り、プログラムは待ちながら非同期を続ける。

##Related Research
###HumanComputation
人を計算資源として捉え、コンピュータでは処理が難しい問題の処理を人に行わせる概念として、
HumanComputationというものがある。
- reCAPTCHA
###Crowd Sourcing
プログラムを通して人に仕事依頼を送れる仕組みとして、クラウドソーシングがある。
- Amazon Mechanical Turk
- Turkit
- AutoMan
- Jabberwocky
###Human as sensor
- medusa
###人をプログラマブルにする

##Finally & Feature
###実世界プログラミングのための分散人力処理環境について提案
###今後	
クオリティコントロールについて
応用アプリケーションの実装


################################################################################
#タイトル
BabaScript: 人力統合可能な実世界プログラミングのためのプラットフォーム
##著者
Takumi Baba, Sho Hashimoto, Toshiyuki Masui

##アブストラクト

##はじめに
###人力というものは、今まで多くのことを成してきた。
	すごい。
###コンピュータでは処理しにくいことは大量にある。
	コンピュータまじすごい。けど、欠点もあるよね。
	コンピュータの欠点を挙げ、できないことを列挙
###コンピュータでは処理しにくいことを、人を計算資源として扱うことによって解決しようということが言われている
	HumanComputation
	Human as Sensor
	人を計算資源として扱うことの需要は増えている
###Sensor/Actuatorを用いて実世界に干渉しようという研究はよくある
	処理の限界
	コンテキストを伴ったセンシングはできない
	汎用的に扱えるアクチュエータはない
###人は、万能のオブジェクトである
	計算資源にもなる
	Sensor/Actuatorにもなる
###本研究では、より柔軟な処理を行える「人間」を計算資源/実世界とのインタフェースとして捉え、プログラム上で「人間」がセンサーやアクチュエータ、計算機と対等に通信/処理を行えるようなプラットフォーム　"BabaScript"を提案する。

##人力統合可能な実世界プログラミングのためのプラットフォーム
人間を計算資源だけでなく、実世界へのインタフェースとして捉え、プログラム上で扱えるような仕組みを提案する。
人間をプログラム内の1モジュールとして扱え、実世界とのインタフェースや計算資源として利用するための仕組みは未だない。
以下の３要素からなる
- 人間への命令を記述可能なプログラミング言語拡張
BabaScriptというRuby拡張
- 人間への命令を適切な人へと分散させる分散プラットフォーム
増井研究室で開発しているLinda-Baseを採用した
- 命令を受け取り、人へ命令内容を伝え、人の処理結果をプログラムに返すクライアントソフトウェア
Androidアプリケーション
###組み合わせる
3要素を組み合わせた流れを記述する


##アプリケーション例

##関連研究
###Human Computation
###Human as Sensor
###実世界指向インタフェースにおける人の役割

##議論
###人へのインセンティブ
###QualityControll
###タスクの適切な分散

##結論

##参考文献